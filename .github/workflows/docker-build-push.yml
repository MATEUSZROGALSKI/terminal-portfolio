name: Build and Push Docker Image

on:
  push:
    branches:
      - master
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  # Convert repository name to lowercase for GHCR compatibility
  IMAGE_NAME: ${{ format('{0}', github.repository) | lower }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup ESLint if needed
        run: |
          if ! [ -f .eslintrc.json ]; then
            echo "Setting up ESLint with Next.js recommended configuration"
            echo '{
              "extends": "next/core-web-vitals",
              "rules": {
                "react/no-unescaped-entities": "off",
                "react-hooks/exhaustive-deps": "warn"
              }
            }' > .eslintrc.json
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=sha,format=short
            type=ref,event=tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Add build args to ensure all dependencies are installed
          build-args: |
            NODE_ENV=development
            MONGODB_URI=mongodb://localhost:27017
            MONGODB_DB=portfolio
